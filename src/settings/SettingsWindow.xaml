<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i18n="clr-namespace:WinCompose.i18n"
        xmlns:wc="clr-namespace:WinCompose"
        mc:Ignorable="d" x:Class="WinCompose.SettingsWindow"
        Title="{x:Static i18n:Text.Options}" Width="420" Height="520"
        Icon="/WinCompose;component/res/key_compose.png"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        Closing="CloseWindowClicked">

    <Window.Resources>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="OnCloseCommandExecuted"/>
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="ApplicationCommands.Close"/>
        <!-- TODO: bind this to something -->
        <!--<KeyBinding Key="Escape" Command=""/>-->
    </Window.InputBindings>

    <DockPanel Margin="8">

      <!-- The Settings group -->
      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.Behavior}" VerticalAlignment="Top">
         <Grid VerticalAlignment="Top">
             <Grid.ColumnDefinitions>
                 <ColumnDefinition Width="Auto"/>
                 <ColumnDefinition Width="3*"/>
                 <ColumnDefinition Width="*"/>
             </Grid.ColumnDefinitions>
             <Grid.RowDefinitions>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
             </Grid.RowDefinitions>

             <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static i18n:Text.Language}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <ComboBox Grid.Row="0" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                       ItemsSource="{x:Static wc:Settings.ValidLanguages}"
                       SelectedValue="{Binding SelectedLanguage}"
                       SelectedValuePath="Key" DisplayMemberPath="Value"/>

             <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static i18n:Text.ComposeKey}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <ComboBox Grid.Row="1" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                       ItemsSource="{x:Static wc:Settings.ValidComposeKeys}"
                       SelectedItem="{Binding Value, Source={x:Static wc:Settings.ComposeKey}}"
                       SelectedValuePath="" DisplayMemberPath="FriendlyName"/>

             <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static i18n:Text.ResetDelay}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <UniformGrid Columns="2" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center">
                 <TextBox Margin="8,4" Text="{Binding Value, Source={x:Static wc:Settings.ResetDelay}}"/>
                 <TextBlock Grid.Row="2" Grid.Column="1" Text="{x:Static i18n:Text.Milliseconds}"
                            Grid.ColumnSpan="2" Margin="8,4"
                            Focusable="False" TextAlignment="Right" VerticalAlignment="Center"/>
             </UniformGrid>

             <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.CaseInsensitive}}">
                 <TextBox Text="{x:Static i18n:Text.CaseInsensitive}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
             </CheckBox>

             <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.DiscardOnInvalid}}">
                 <TextBox Text="{x:Static i18n:Text.DiscardOnInvalid}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
             </CheckBox>

             <CheckBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.BeepOnInvalid}}">
                 <TextBox Text="{x:Static i18n:Text.BeepOnInvalid}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
             </CheckBox>

             <TextBlock Grid.Row="6" Grid.Column="0" Text="{x:Static i18n:Text.TestTyping}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <TextBox Grid.Row="6" Grid.Column="1" DockPanel.Dock="Top" Margin="8" Width="Auto" MaxWidth="200"
                      Grid.ColumnSpan="3" Height="Auto" FontSize="20" FontWeight="SemiBold"
                      Foreground="#434" Background="#eee" ForceCursor="True">ÅḄ₡Đ♥…</TextBox>
         </Grid>
      </GroupBox>

      <!-- The Tweaks group -->
      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.Tweaks}" VerticalAlignment="Top">
          <Grid VerticalAlignment="Center">
              <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <CheckBox Grid.Row="0" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center" IsEnabled="False"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.KeepOriginalKey}}">
                  <TextBox Text="{x:Static i18n:Text.KeepOriginalKey}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
              </CheckBox>

              <CheckBox Grid.Row="1" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.InsertZwsp}}">
                  <TextBox Text="{x:Static i18n:Text.InsertZwsp}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
              </CheckBox>

              <CheckBox Grid.Row="2" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.EmulateCapsLock}}">
                  <TextBox Text="{x:Static i18n:Text.EmulateCapsLock}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
              </CheckBox>

              <CheckBox Grid.Row="3" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.ShiftDisablesCapsLock}}">
                  <TextBox Text="{x:Static i18n:Text.ShiftDisablesCapsLock}"
                          Focusable="False" TextWrapping="Wrap" BorderThickness="0"/>
              </CheckBox>
          </Grid>
      </GroupBox>

      <!-- The Close button -->
      <StackPanel Margin="10" DockPanel.Dock="Bottom" Orientation="Vertical">
          <TextBlock Foreground="Red" Text="{x:Static i18n:Text.NeedRestart}" HorizontalAlignment="Left"
                  Visibility="{Binding WarnMessageVisibility}"/>
          <Button Margin="0, 4, 0, 0" DockPanel.Dock="Bottom" HorizontalAlignment="Right" VerticalAlignment="Bottom" MinWidth="80"
                      Content="{Binding CloseButtonText}" Command="{Binding CloseButtonCommand}"
                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
      </StackPanel>

  </DockPanel>
</Window>
